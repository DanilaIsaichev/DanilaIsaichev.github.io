<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>comppract on Danila Isaichev's Portfolio</title><link>https://danilaisaichev.github.io/comppract/</link><description>Recent content in comppract on Danila Isaichev's Portfolio</description><generator>Hugo -- gohugo.io</generator><language>ru</language><atom:link href="https://danilaisaichev.github.io/comppract/index.xml" rel="self" type="application/rss+xml"/><item><title>lab12</title><link>https://danilaisaichev.github.io/comppract/lab12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab12/</guid><description>Результатом выполнения лабораторных работ №1 и №2 является данный сайт</description></item><item><title>lab34</title><link>https://danilaisaichev.github.io/comppract/lab34/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab34/</guid><description>Цель: Транспиляция с помощью Babel, развёртывание проекта на JavaScript, включающего модули.
Файл index.js до выполнения транспиляции: 16 |&amp;gt; Math.sqrt |&amp;gt; console.log Файл index.js после выполнения транспиляции: var _ref, _; _ref = (_ = 16, Math.sqrt(_)), console.log(_ref); Файл main.js до выполнения транспиляции: import moment from &amp;#39;moment&amp;#39;; import name from &amp;#39;./name&amp;#39;; console.log(name); console.log(moment.unix(&amp;#39;1500514362&amp;#39;).format(&amp;#39;DD.MM.YYYY HH:mm:ss&amp;#39;)); Файл main.js после выполнения транспиляции: &amp;#39;use strict&amp;#39;; var _moment = require(&amp;#39;moment&amp;#39;); var _moment2 = _interopRequireDefault(_moment); var _name = require(&amp;#39;.</description></item><item><title>lab56</title><link>https://danilaisaichev.github.io/comppract/lab56/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab56/</guid><description>Цель: Научиться выполнять сборку проекта с помощью webpack.
Инициализация проекта: Добавление webpack и webpack-cli: Добавление moment: package.json: index.js: Сборка: README.md: Результат: Вывод: В ходе выполнения работ были получены сборки проекта с помощью webpack.
Ссылка на репозиторий: Репозиторий с результатами выполнения лабораторных работ 5-6</description></item><item><title>lab78</title><link>https://danilaisaichev.github.io/comppract/lab78/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab78/</guid><description>Цель: Научиться создавать изображения с помощью JavaScript Canvas API и:
Создать страницу с логотипом, повёрнутым на 90 градусов против часовой стрелки, состоящим из: инициалов, записанных в стиле написания почтового индекса, и кривой Безье под ними.
Создать страницу, на которой полученный логотип будет использован, как фоновый узор.
Функция, отвечающая за создание Canvas&amp;rsquo;а: function makeCanvas(x, y) { const canvas = document.createElement(&amp;#39;canvas&amp;#39;), ctx = canvas.getContext(&amp;#39;2d&amp;#39;); canvas.setAttribute(&amp;#39;width&amp;#39;, x); canvas.setAttribute(&amp;#39;height&amp;#39;, y); return { canvas, ctx }; } Фрагмент кода, отвечающий за: создание нового Canvas’а;</description></item><item><title>lab910</title><link>https://danilaisaichev.github.io/comppract/lab910/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab910/</guid><description> Отчёт о выполнении лабораторных работ 9-10 POST запрос с помощью telnet Ответ на POST запрос с помощью telnet GET запрос с помощью telnet Ответ на GET запрос с помощью telnet POST запрос с помощью curl Ответ на POST запрос с помощью curl GET запрос с помощью curl Ответ на GET запрос с помощью curl</description></item><item><title>lab1112</title><link>https://danilaisaichev.github.io/comppract/lab1112/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab1112/</guid><description>Цель: Создать приложение, получающее данные через форму, и кодирующее их в MD5 и SHA-1.
Создать приложение-калькулятор, получающее данные через форму, и выводящее результаты вычислений на той же странице.
1. Создание приложения, получающего данные через форму, и кодирующего их в MD5 и SHA-1. Код формы, собирающей данные для кодирования (фрагмент index.php): &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Lab 11&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form action=&amp;#34;index.php&amp;#34; method=&amp;#34;POST&amp;#34; &amp;gt; Name &amp;lt;input id=&amp;#34;name&amp;#34; name=&amp;#34;name&amp;#34; value=&amp;#34;Anonimous&amp;#34; /&amp;gt; &amp;lt;br&amp;gt; E-mail: &amp;lt;input id=&amp;#34;email&amp;#34; name=&amp;#34;email&amp;#34; type=&amp;#34;email&amp;#34;/&amp;gt; &amp;lt;br&amp;gt; Password &amp;lt;input id=&amp;#34;pass&amp;#34; name=&amp;#34;pass&amp;#34; type=&amp;#34;password&amp;#34; /&amp;gt; &amp;lt;br&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Код, отвечающий за кодирование и вывод данных (фрагмент index.</description></item><item><title>lab1314</title><link>https://danilaisaichev.github.io/comppract/lab1314/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab1314/</guid><description>Отчёт по лабораторным работам 13 и 14 Цель: Создать журнал сообщений.
Создать модифицированную версию журнала сообщений с формой на Bootstrap.
Создать приложение «Книга отзывов» с использованием БД MySQL.
1. Создание журнала сообщений. Код, отвечающий за запись данных в файл (фрагмент index.php): if ($_SERVER[&amp;#39;REQUEST_METHOD&amp;#39;]===&amp;#39;POST&amp;#39;) { $r = htmlentities($_POST[&amp;#39;message&amp;#39;]) ?? &amp;#39;Пустое сообщение&amp;#39;; $f = fopen(&amp;#39;log.txt&amp;#39;, &amp;#39;a&amp;#39;); fwrite($f, $r); fwrite($f, &amp;#34;\n&amp;#34;); fclose($f); $f = &amp;#39;&amp;lt;style&amp;gt;.right {width: 60%; margin-left: 35%; zoom: 80%}&amp;lt;/style&amp;gt;&amp;#39;; $f .= &amp;#39;&amp;lt;div class=&amp;#34;right&amp;gt;&amp;lt;h2&amp;gt;Добавить ещё один отзыв&amp;lt;/h2&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;; echo &amp;#39;&amp;lt;h3 style=&amp;#34;color:green&amp;#34;&amp;gt;Данные успешно добавлены&amp;lt;/h3&amp;gt;&amp;#39;; } Код формы, собирающей данные (фрагмент index.</description></item><item><title>lab15</title><link>https://danilaisaichev.github.io/comppract/lab15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/lab15/</guid><description>Цель: Создать Express-приложение, которое по маршруту /add (GET) добавляет в коллекцию users в этой базе данных документ со следующими полями:
поле login состоит из слова herzen, знака @ и электронной почты, как она указана в Moodle (herzen@danila.isaichev@mail.ru);
поле password содержит число, переданное через сообщение в Moodle перед началом занятия (16).
Добавить маршрут /addfrompage, который работает аналогично предыдущему, но поле password содержит результат считывания содержимого со страницы http://kodaktor.ru/g/_unsafe/65e39.
Осуществить вставку, перейдя по маршруту /add.</description></item><item><title>labs</title><link>https://danilaisaichev.github.io/comppract/labs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/labs/</guid><description>Тема 4 Ссылка на Repl Ссылка на Repl</description></item><item><title>isr1</title><link>https://danilaisaichev.github.io/comppract/isr1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/isr1/</guid><description>Создание проекта yarn init -y Добавление зависимостей yarn add -D babel-cli babel-preset-env Настройка Babel (файл .babelrc) {&amp;#34;presets&amp;#34;: [&amp;#34;env&amp;#34;]} Добавление библиотеки moment yarn add moment Команда транспиляции babel-node ./src/index.js Сборка проекта babel ./src -d ./lib Файлы main.js и name.js находятся в отношении нативной модульности.
Исходные файлы расположены в директории src, транспилированные - в директории res.
Ссылка на репозиторий</description></item><item><title>isr2</title><link>https://danilaisaichev.github.io/comppract/isr2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/isr2/</guid><description/></item><item><title>vsrs</title><link>https://danilaisaichev.github.io/comppract/vsrs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danilaisaichev.github.io/comppract/vsrs/</guid><description>Ссылка на папку в репозиторие Тема 1. Сборка проекта с помощью бандлера Webpack Добавление webpack и webpack-cli yarn add -D webpack webpack-cli Добавление библиотеки moment yarn add moment Сборка проекта yarn webpack . -o ./bundle.js Тема 2. Разработка серверной компоненты приложения удалённого доступа к базам данных и экспериментальная проверка корректности её работы Серверная компонента приложения может представлять собой реализацию REST API для выполнения операций CRUD в базе данных MongoDB.</description></item></channel></rss>